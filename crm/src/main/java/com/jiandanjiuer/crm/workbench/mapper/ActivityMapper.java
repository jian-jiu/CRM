package com.jiandanjiuer.crm.workbench.mapper;

import com.jiandanjiuer.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Mon Aug 17 09:49:36 CST 2020
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Mon Aug 17 09:49:36 CST 2020
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Mon Aug 17 09:49:36 CST 2020
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Mon Aug 17 09:49:36 CST 2020
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Mon Aug 17 09:49:36 CST 2020
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Mon Aug 17 09:49:36 CST 2020
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 保存创建的市场活动
     *
     * @param activity
     * @return
     */
    int insertActivity(Activity activity);

    /**
     * 根据条件分页查询数据
     *
     * @param map
     * @return
     */
    List<Activity> selectActivityForPageByCondition(Map<String, Object> map);

    /**
     * 根据条件查询总条数
     *
     * @param map
     * @return
     */
    long selectCountOActivityByCondition(Map<String, Object> map);

    /**
     * 效果数据
     *
     * @param record
     * @return
     */
    int updateByPrimaryId(Activity record);

    /**
     * 根据多个id删除数据
     *
     * @param ids
     * @return
     */
    int deleteActivityByIds(String[] ids);
}